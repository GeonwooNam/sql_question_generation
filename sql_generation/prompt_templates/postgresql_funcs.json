[
  "ABS(X) \nDescription: The ABS(X) function returns the absolute value of the numeric argument X. Abs(X) returns NULL if X is NULL. Abs(X) returns 0.0 if X is a string or blob that cannot be converted to a numeric value. If X is the integer -9223372036854775808 then ABS(X) throws an integer overflow error since there is no equivalent positive 64-bit two complement value.",
  "COALESCE(X,Y,...) \nDescription: Returns the first non-NULL value from the list.",
  "CONCAT(X,...) \nDescription: The CONCAT(...) function returns a string which is the concatenation of the string representation of all of its non-NULL arguments. If all arguments are NULL, then CONCAT() returns an empty string. ",
  "CONCAT_WS(SEP,X,...) \nDescription: Concatenates strings using the given separator.",
  "FORMAT(FORMAT,...) \nDescription: The FORMAT(FORMAT,...) SQL function works like thesqlite3_mprintf()C-language function and the printf() function from the standard C library. The first argument is a format string that specifies how to construct the output string using values taken from subsequent arguments. If the FORMAT argument is missing or NULL then the result is NULL. The %n format is silently ignored and does not consume an argument. The %p format is an alias for %X. The %z format is interchangeable with %s. If there are too few arguments in the argument list, missing arguments are assumed to have a NULL value, which is translated into 0 or 0.0 for numeric formats or an empty string for %s. See thebuilt-in printf()documentation for additional information. ",
  "CHR(X) \nDescription: Returns the character with the given ASCII code.",
  "LOWER(X) \nDescription: Converts the string X to lowercase.",
  "UPPER(X) \nDescription: Converts the string X to uppercase.",
  "LTRIM(X,Y) \nDescription: Removes characters in Y from the start of string X.",
  "RTRIM(X,Y) \nDescription: Removes characters in Y from the end of string X.",
  "TRIM(X,Y) \nDescription: Removes characters in Y from both ends of string X.",
  "LENGTH(X) \nDescription: Returns the number of characters in string X.",
  "REPLACE(X,Y,Z) \nDescription: Replaces all occurrences of Y in X with Z.",
  "POSITION(Y IN X) \nDescription: Returns position of substring Y in X.",
  "ROUND(X,Y) \nDescription: Rounds X to Y decimal places.",
  "SIGN(X) \nDescription: Returns -1, 0, or 1 depending on the sign of X.",
  "RANDOM() \nDescription: Returns a random float between 0 and 1.",
  "TO_CHAR(date, format) \nDescription: Formats date/time values using a format string.",
  "SUBSTRING(X FROM Y FOR Z) \nDescription: Extracts a substring from string X starting at Y for Z characters.",
  "NULLIF(X,Y) \nDescription: Returns NULL if X equals Y; otherwise returns X.",
  "GREATEST(X,Y,...) \nDescription: Returns the largest of the given arguments.",
  "LEAST(X,Y,...) \nDescription: Returns the smallest of the given arguments.",
  "QUOTE_LITERAL(X) \nDescription: Safely quotes a literal value for SQL.",
  "PG_TYPEOF(X) \nDescription: Returns the data type of expression X.",
  "GEN_RANDOM_BYTES(N) \nDescription: Generates N random bytes. Requires pgcrypto extension.",
  "ENCODE(X, 'hex') \nDescription: Converts bytea to a hex string."
]